# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'ubuntu-latest'

resources:
- repo: self


variables:
  tag: '$(Build.BuildId)'
  imageRepository: 'ustpoc-docker-local.jfrog.io/haripython'

stages:
- stage: Check 
  displayName: Check Stage
  jobs:  
  - job: Check
    displayName: Code check
    
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'Sonarcloud'
        organization: 'sonarcloud-hari'
        scannerMode: 'CLI'
        configMode: 'file'

    - task: SonarCloudAnalyze@1
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'


- stage: Build 
  displayName: Docker Stage
  jobs:  
  - job: Check
    displayName: Scan check 
    steps:

    - task: ArtifactoryDocker@1
      inputs:
        command: 'pull'
        artifactoryService: 'Artifactory'
        sourceRepo: 'docker'
        imageName: 'ustpoc-docker.jfrog.io/python:latest'
    
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
    
    - task: UniversalPackages@0
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.SourcesDirectory)'
        feedsToUse: 'internal'
        vstsFeed: 'ade4b5c1-82b5-4184-8018-ee2d34698992'
        vstsFeedPackage: '311f5e8c-3cb6-49bf-8af7-4a65c935b291'
        vstsPackageVersion: '19.7.363'

    
    - task: CmdLine@2
      inputs:
        script: |
          sudo ls -al
          sudo mv $(Build.SourcesDirectory)/twistcli /usr/bin/twistcli
          sudo chmod +x /usr/bin/twistcli
        
    
    - task: twistcli-scan@1
      inputs:
        scanType: 'images'
        twistlockService: 'twistlock'
        vulnerabilityThreshold: 'critical'
        onlyFixed: false
        gracePeriod: '0'
        complianceThreshold: 'critical'
        artifact: '$(imageRepository):$(tag)'
